<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deway.blog.mapper.AccessTokenMapper">
  <resultMap id="BaseResultMap" type="com.deway.blog.entiry.auth.AccessToken">
    <id column="access-token_id" jdbcType="BIGINT" property="id" />
    <result column="access-token_user_id" jdbcType="BIGINT" property="user_id" />
    <result column="access-token_token" jdbcType="CHAR" property="token" />
    <result column="access-token_ttl" jdbcType="INTEGER" property="ttl" />
    <result column="access-token_create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="access-token_scope" jdbcType="CHAR" property="scope" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    access-token.id as access-token_id, access-token.user_id as access-token_user_id, 
    access-token.token as access-token_token, access-token.ttl as access-token_ttl, access-token.create_time as access-token_create_time, 
    access-token.`scope` as `access-token_scope`
  </sql>
  <select id="selectByExample" parameterType="com.deway.blog.entiry.auth.AccesstokenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from access-token access-token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from access-token access-token
    where access-token.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from access-token
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.deway.blog.entiry.auth.AccesstokenExample">
    delete from access-token access-token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.deway.blog.entiry.auth.Accesstoken" useGeneratedKeys="true">
    insert into access-token (user_id, token, ttl, 
      create_time, `scope`)
    values (#{user_id,jdbcType=BIGINT}, #{token,jdbcType=CHAR}, #{ttl,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{scope,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.deway.blog.entiry.auth.Accesstoken" useGeneratedKeys="true">
    insert into access-token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="ttl != null">
        ttl,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="scope != null">
        `scope`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=CHAR},
      </if>
      <if test="ttl != null">
        #{ttl,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deway.blog.entiry.auth.AccesstokenExample" resultType="java.lang.Long">
    select count(*) from access-token access-token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update access-token access-token
    <set>
      <if test="record.id != null">
        access-token.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null">
        access-token.user_id = #{record.user_id,jdbcType=BIGINT},
      </if>
      <if test="record.token != null">
        access-token.token = #{record.token,jdbcType=CHAR},
      </if>
      <if test="record.ttl != null">
        access-token.ttl = #{record.ttl,jdbcType=INTEGER},
      </if>
      <if test="record.create_time != null">
        access-token.create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scope != null">
        access-token.`scope` = #{record.scope,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update access-token access-token
    set access-token.id = #{record.id,jdbcType=BIGINT},
      access-token.user_id = #{record.user_id,jdbcType=BIGINT},
      access-token.token = #{record.token,jdbcType=CHAR},
      access-token.ttl = #{record.ttl,jdbcType=INTEGER},
      access-token.create_time = #{record.create_time,jdbcType=TIMESTAMP},
      access-token.`scope` = #{record.scope,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deway.blog.entiry.auth.Accesstoken">
    update access-token
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=CHAR},
      </if>
      <if test="ttl != null">
        ttl = #{ttl,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="scope != null">
        `scope` = #{scope,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deway.blog.entiry.auth.Accesstoken">
    update access-token
    set user_id = #{user_id,jdbcType=BIGINT},
      token = #{token,jdbcType=CHAR},
      ttl = #{ttl,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      `scope` = #{scope,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>